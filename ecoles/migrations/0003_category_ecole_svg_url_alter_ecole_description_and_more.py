# Generated by Django 4.0.6 on 2022-07-31 16:46

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('ecoles', '0002_ecole_url_keyword'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='Category', max_length=64)),
                ('description', models.TextField(validators=[django.core.validators.MinLengthValidator(30)])),
                ('allowed_editors', models.ManyToManyField(blank=True, default=None, related_name='category_allowed_editors', to=settings.AUTH_USER_MODEL)),
                ('creator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='creator_of_category', to=settings.AUTH_USER_MODEL)),
                ('edit_access_request', models.ManyToManyField(blank=True, default=None, related_name='category_edit_access_request', to=settings.AUTH_USER_MODEL)),
                ('students', models.ManyToManyField(blank=True, default=None, related_name='category_students', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='ecole',
            name='svg_url',
            field=models.CharField(default='', max_length=256),
        ),
        migrations.AlterField(
            model_name='ecole',
            name='description',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.CreateModel(
            name='Specialization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='Specialization', max_length=64)),
                ('description', models.TextField(validators=[django.core.validators.MinLengthValidator(30)])),
                ('visibility', models.CharField(choices=[('Invisible', 'Invisible'), ('Private', 'Private'), ('Public', 'Public')], default='Private', max_length=100)),
                ('difficulty_level', models.CharField(choices=[('Beginner', 'Beginner'), ('Mixed', 'Mixed'), ('Intermediate', 'Intermediate'), ('Difficult', 'Difficult'), ('Advanced', 'Advanced')], default='Beginner', max_length=100)),
                ('allowed_editors', models.ManyToManyField(blank=True, default=None, related_name='specialization_allowed_editors', to=settings.AUTH_USER_MODEL)),
                ('completed', models.ManyToManyField(blank=True, default=None, related_name='specialization_completed', to=settings.AUTH_USER_MODEL)),
                ('creator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='creator_of_specialization', to=settings.AUTH_USER_MODEL)),
                ('edit_access_request', models.ManyToManyField(blank=True, default=None, related_name='specialization_edit_access_request', to=settings.AUTH_USER_MODEL)),
                ('students', models.ManyToManyField(blank=True, default=None, related_name='specialization_students', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Field',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='Field', max_length=64)),
                ('description', models.TextField(validators=[django.core.validators.MinLengthValidator(30)])),
                ('allowed_editors', models.ManyToManyField(blank=True, default=None, related_name='field_allowed_editors', to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='category_of_field', to='ecoles.category')),
                ('creator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='creator_of_field', to=settings.AUTH_USER_MODEL)),
                ('edit_access_request', models.ManyToManyField(blank=True, default=None, related_name='field_edit_access_request', to=settings.AUTH_USER_MODEL)),
                ('students', models.ManyToManyField(blank=True, default=None, related_name='field_students', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='Course', max_length=64)),
                ('description', models.TextField(validators=[django.core.validators.MinLengthValidator(30)])),
                ('visibility', models.CharField(choices=[('Invisible', 'Invisible'), ('Private', 'Private'), ('Public', 'Public')], default='Private', max_length=100)),
                ('difficulty_level', models.CharField(choices=[('Beginner', 'Beginner'), ('Mixed', 'Mixed'), ('Intermediate', 'Intermediate'), ('Difficult', 'Difficult'), ('Advanced', 'Advanced')], default='Beginner', max_length=100)),
                ('allowed_editors', models.ManyToManyField(blank=True, default=None, related_name='course_allowed_editors', to=settings.AUTH_USER_MODEL)),
                ('completed', models.ManyToManyField(blank=True, default=None, related_name='course_completed', to=settings.AUTH_USER_MODEL)),
                ('creator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='creator_of_course', to=settings.AUTH_USER_MODEL)),
                ('edit_access_request', models.ManyToManyField(blank=True, default=None, related_name='course_edit_access_request', to=settings.AUTH_USER_MODEL)),
                ('specialization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='courses_within_specialization', to='ecoles.specialization')),
                ('students', models.ManyToManyField(blank=True, default=None, related_name='course_students', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
